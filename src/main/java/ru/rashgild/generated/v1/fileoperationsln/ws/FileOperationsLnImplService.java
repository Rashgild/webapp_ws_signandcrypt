
package ru.rashgild.generated.v1.fileoperationsln.ws;

import java.net.MalformedURLException;
import java.net.URL;
import javax.jws.HandlerChain;
import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceException;
import javax.xml.ws.WebServiceFeature;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.4-b01
 * Generated source version: 2.2
 *
 */
@WebServiceClient(name = "FileOperationsLnImplService", targetNamespace = "http://ru/ibs/fss/ln/ws/FileOperationsLn.wsdl", wsdlLocation = "https://docs.fss.ru//WSLnCryptoV11/FileOperationsLnPort?WSDL")
@HandlerChain(file= "main/java/ru/rashgild/interceptor/handler-chain.xml")
public class FileOperationsLnImplService
        extends Service
{

    private final static URL FILEOPERATIONSLNIMPLSERVICE_WSDL_LOCATION;
    private final static WebServiceException FILEOPERATIONSLNIMPLSERVICE_EXCEPTION;
    private final static QName FILEOPERATIONSLNIMPLSERVICE_QNAME = new QName("http://ru/ibs/fss/ln/ws/FileOperationsLn.wsdl", "FileOperationsLnImplService");

    static {
        URL url = null;
        WebServiceException e = null;
        try {
            url = new URL("https://docs.fss.ru/WSLnCryptoV11/FileOperationsLnPort?WSDL");
        } catch (MalformedURLException ex) {
            e = new WebServiceException(ex);
        }
        FILEOPERATIONSLNIMPLSERVICE_WSDL_LOCATION = url;
        FILEOPERATIONSLNIMPLSERVICE_EXCEPTION = e;
    }

    public FileOperationsLnImplService() {
        super(__getWsdlLocation(), FILEOPERATIONSLNIMPLSERVICE_QNAME);
    }

    public FileOperationsLnImplService(WebServiceFeature... features) {
        super(__getWsdlLocation(), FILEOPERATIONSLNIMPLSERVICE_QNAME, features);
    }

    public FileOperationsLnImplService(URL wsdlLocation) {
        super(wsdlLocation, FILEOPERATIONSLNIMPLSERVICE_QNAME);
    }

    public FileOperationsLnImplService(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, FILEOPERATIONSLNIMPLSERVICE_QNAME, features);
    }

    public FileOperationsLnImplService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public FileOperationsLnImplService(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     *
     * @return
     *     returns FileOperationsLn
     */
    @WebEndpoint(name = "FileOperationsLnPort")
    public FileOperationsLn getFileOperationsLnPort() {
        return super.getPort(new QName("http://ru/ibs/fss/ln/ws/FileOperationsLn.wsdl", "FileOperationsLnPort"), FileOperationsLn.class);
    }

    /**
     *
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns FileOperationsLn
     */
    @WebEndpoint(name = "FileOperationsLnPort")
    public FileOperationsLn getFileOperationsLnPort(WebServiceFeature... features) {
        return super.getPort(new QName("http://ru/ibs/fss/ln/ws/FileOperationsLn.wsdl", "FileOperationsLnPort"), FileOperationsLn.class, features);
    }

    private static URL __getWsdlLocation() {
        if (FILEOPERATIONSLNIMPLSERVICE_EXCEPTION!= null) {
            throw FILEOPERATIONSLNIMPLSERVICE_EXCEPTION;
        }
        return FILEOPERATIONSLNIMPLSERVICE_WSDL_LOCATION;
    }

}
